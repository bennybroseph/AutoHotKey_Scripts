Version = 4.2

[Preferences]

; Name of the application you want to use the program for
; This should be the name of the window that opens when the game is running
; It's usually the same as the .exe
; Swaps window focus when launching the program
Application_Name = Diablo III

; If using YoloMouse or a similar application to hide the mouse cursor then set this to true
; Provides better visual clarity if set to true and using an invisible cursor
Using_Invisible_Cursor = false

; The delay in milliseconds between LButton presses at the center of the screen
; Setting this value higher is useful if the game has anti-cheat enabled which disallows repeated button presses
Loot_Delay = 80

; The delay in milliseconds between moving the cursor over to the targeting reticule and pressing the desired hotkey.
; Setting this value to ~10 is useful for games like PoE which seem to register input slower than Diablo III
Targeting_Delay = 5

; Instead of pressing the 'Force_Move' key and releasing it when needed, it will be constantly pressed and released
; This is useful in games like LoL where pathing is calculated on each click
Repeat_Force_Move = false

; If the game you're playing has animation canceling (PoE, LoL, etc...) reseting movement on targeted skills will cancel the animation
; In games with animation canceling (PoE), set this value to false
; In games without animation canceling (Diablo III) set this value to true
Halt_Movement_On_Target = true

; The strength of the vibration. Max value of 65535
Vibration_Strength = 55000

; The amount of time in milliseconds that the controller vibrates for
Vibration_Duration = 125

; The amount of time in milliseconds before the key is considered held down
Hold_Delay = 210

; Enables 'Cursor' mode when the program starts
; Useful if you don't want to bind the toggle to a button but want to use the mode anyway
; Keep in mind that there is no keyboard key bound to 'Cursor' mode by default
; If enabled here and not bound to a controller button there will be no way to disable it
Cursor_Mode_At_Start = false

; Enables 'FreeTarget' mode when the program starts
; Useful if you don't want to bind the toggle to a button but want to use the mode anyway
; Keep in mind that there is no keyboard key bound to 'FreeTarget' mode by default
; If enabled here and not bound to a controller button there will be no way to disable it
FreeTarget_Mode_At_Start = false

; Whether or not to show a notification in the top left of the screen when in the respective mode
; true = show notification
; false = hide notification
Show_Cursor_Mode_Notification = true
Show_FreeTarget_Mode_Notification = true
Show_Inventory_Mode_Notification = true

; Whether or not to show the notification in the top left of the screen when the application is paused
; true = show notification
; false = hide notification
Show_Paused_Notification = true

[Analog Stick]

; The base resolution to use when scaling the radius and offset values to different window sizes
; If your resolution does not match this one, the script will attempt to automatically scale it
; If you don't plan on editing the radius and offset values for your resolution, don't edit this
Base_Resolution_Height = 1920
Base_Resolution_Width = 1080

; The width and height of the oval that the stick responsible for movement (Left Stick by Default)
; makes when pushed all the way in that direction
Movement_Min_Radius_Width = 55
Movement_Min_Radius_Height = 38

; The width and height of the oval that the stick responsible for movement (Left Stick by Default)
; makes when pushed all the way in that direction
Movement_Max_Radius_Width = 55
Movement_Max_Radius_Height = 38

; The width and height of the oval that the stick responsible for targeting (Right Stick by Default)
; makes when pushed all the way in that direction
Targeting_Min_Radius_Width = 0
Targeting_Min_Radius_Height = 0

; The width and height of the oval that the stick responsible for targeting (Right Stick by Default)
; makes when pushed all the way in that direction
Targeting_Max_Radius_Width = 800
Targeting_Max_Radius_Height = 400

; The value to be added to the dead center of the active window to determine the center of the game
; It's basically determining where the mouse rests at idle and the Loot spam clicks should happen.
; You should try to make this end up where your player's feet are for the game you are playing
Center_Offset_X = 0
Center_Offset_Y = -60

; These values are the extra offset that the left analog stick will use added to 'Center_Offset' to define it's movement circle
; The final value for the left stick's center will be 'Center_Offset' plus this value
Movement_Center_Offset_X = 0
Movement_Center_Offset_Y = 25

; These values are the extra offset that the right analog stick will use added to 'Center_Offset' to define it's movement circle
; The final value for the right stick's center will be 'Center_Offset' plus this value
Targeting_Center_Offset_X = 0
Targeting_Center_Offset_Y = 0

; These values are a multiplier for the sensitivity of each stick's cursor mode
; Values above 1.0 will increase the speed and values below 1.0 will decrease it while in cursor mode for the respective stick
Left_Analog_Cursor_Sensitivity_X = 1
Left_Analog_Cursor_Sensitivity_Y = 1

; These values are a multiplier for the sensitivity of each stick's cursor mode
; Values above 1.0 will increase the speed and values below 1.0 will decrease it while in cursor mode for the respective stick
Right_Analog_Cursor_Sensitivity_X = 1
Right_Analog_Cursor_Sensitivity_Y = 1

; Turning this on will draw a triangle from the center of the screen to where the targeting reticle is.
; This may make it easier to keep track of where you're currently aiming
Target_Triangle_Enabled = false

; This value represents the size of the triangle's base in pixels.
; This gets scaled by the base resolution.
Target_Triangle_Width = 60

; This value is the color of the triangle.
; The final value in the parenthesis is the opacity.
Target_Triangle_Color = (255, 255, 0, 60)

; Swaps the left and right stick responsibilities at the start
; The default behaviour is left stick moves and right stick targets
; Setting this to true would make left stick target and right stick move
Swap_Sticks_At_Start = false

[Inventory]

; The script automatically scales based on the width and height difference from a 1920x1080 resolution
; If your resolution is in 16:9 aspect ratio then you don't need to worry about these values
; If using a non 16:9 aspect ratio, these values can be used to scale the inventory grid in addition to the automatic scaling
Custom_Scaling_Width = 1
Custom_Scaling_Height = 1

; If a custom scaling option doesn't help in the game you're using, then an offset value may.
; These values are NOT affected by the scaling calculations and are instead absolute offsets.
; Use these values to move the inventory grid in pixels one direction or another.
; Negative values to move left or up respectively.
Offset_Width = 0
Offset_Height = 0

; Allow holding the D-Pad buttons to move the cursor rather than pressing the assigned keybind
Hold_To_Move = true

; The amount of time in milliseconds between moving the cursor again while holding down the D-Pad in inventory mode
Hold_Delay = 75

; Saves the inventory position after closing
Remember_Position = false

[Image Overlay]

; Enables or disables the basic tooltip overlay
; If this setting is off then none of the other settings in this section will function
Enable_Image_Overlay = true

; The base resolution to use when scaling the images to different window sizes
; If your resolution does not match this one, the script will attempt to automatically scale it
; If you don't plan on editing the image overlay values for your resolution, don't edit this
Base_Resolution_Width = 1920
Base_Resolution_Height = 1080

; The scale of each image in the overlay
; Images also scale automatically when the current resolution does not equal the base resolution
Image_Scale = 0.1875

; The image set and size (based on folder name) to use for the overlay
Image_Set = Xbox
Image_Set_Size = 128

; Shows battery status (High, Med, Low) in the upper left
; Only works with controllers that give this info through XInput
Show_Battery_Status = true

; You can add as many or as few Images as you'd like here. Just go into the .ini file and manually
; copy and paste a new entry at the bottom with the appropriate 'ImageX' number.
;
; This should be the keybind that you want to represent here not the controller button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your in-game keybindings should stay static, this setup should be easier to manage
Image1_Keybind = 1

; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image1_Pos_X = 660
Image1_Pos_Y = 1070

; The background color to give the image. Use (0, 0, 0, 0) for no background color
Image1_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image2_Keybind = 2

; Position
Image2_Pos_X = 727
Image2_Pos_Y = 1070

; Background Color
Image2_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image3_Keybind = 3

; Position
Image3_Pos_X = 793
Image3_Pos_Y = 1070

; Background Color
Image3_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image4_Keybind = 4

; Position
Image4_Pos_X = 860
Image4_Pos_Y = 1070

; Background Color
Image4_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image5_Keybind = Shift+LButton

; Position
Image5_Pos_X = 928
Image5_Pos_Y = 1069

; Background Color
Image5_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image6_Keybind = RButton

; Position
Image6_Pos_X = 995
Image6_Pos_Y = 1069

; Background Color
Image6_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image7_Keybind = q

; Position
Image7_Pos_X = 1063
Image7_Pos_Y = 1067

; Background Color
Image7_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image8_Keybind = t

; Position
Image8_Pos_X = 1117
Image8_Pos_Y = 1067

; Background Color
Image8_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image9_Keybind = i

; Position
Image9_Pos_X = 1183
Image9_Pos_Y = 1067

; Background Color
Image9_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image10_Keybind = Esc

; Position
Image10_Pos_X = 1265
Image10_Pos_Y = 1067

; Background Color
Image10_Background = (0, 0, 0, 255)

;Next Image
;
; Delete all 'ImageX' entries to remove that icon
Image11_Keybind = m

; Position
Image11_Pos_X = 1725
Image11_Pos_Y = 380

; Background Color
Image11_Background = (0, 0, 0, 255)
