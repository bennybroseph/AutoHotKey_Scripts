Version = 4.1

[Controller]

; Whether or not to use the connected controller's input
Enabled = true

; The format for all Buttons are as follows
; NameofKey = Modifier+KeyWhenPressed, Modifier+KeyWhenHeld
; Omitting any of these values is fine, and the program will default to however many you include
;
; ex1. A_Button = Shift+RButton, Ctrl+Tab
; ex2. B_Button = LButton, MButton
; ex2. X_Button = Alt, z+Numpad4
;
; For a full list of acceptable key names, check here: https://autohotkey.com/docs/KeyList.htm
;
; The value 'CursorMode' for a button toggles the left stick's cursor mode when pressed
; The value 'Loot' for a button spams the left click at the player's feet
; The value 'FreeTarget' for a button toggles the right stick's cursor mode when pressed
; The value 'SwapSticks' swaps the responsibility of the left and right stick when pressed
;
; Many of the above modes can be enabled before running the script by enabling the relevant setting
Left_Trigger = Shift+LButton
Right_Trigger = RButton
Left_Bumper = 1, 3
Right_Bumper = 2, 4
A_Button = LButton
B_Button = p
X_Button = q
Y_Button = Alt, Loot
Start_Button = Esc
Back_Button = i+Inventory, Inventory
Guide_Button = SwapSticks
D-Pad_Up = s
D-Pad_Down = t
D-Pad_Left = f
D-Pad_Right = Tab, m+CursorMode
Left_Stick_Button = CursorMode
Right_Stick_Button = FreeTarget

; Keybinds put here move the mouse to the Targeting Analog Stick's position (Right Stick by Default) before pressing the specified keys
; It can handle the same syntax as buttons meaning you are able to isolate modifier keys as well
; ex. Targeted_Actions = 1, 4, t, Shift+z
;
; The above would make any buttons using the hotkeys 1, 4, t and Shift+z (but not z) fire off at the targeting reticule's location
Targeted_Actions = Shift+LButton, RButton, 1, 2, 3, 4

; Keybinds put here will ignore the targeting reticule when using the controller button bound to it
; Instead, it will instead use the specified keys at the direction of the Movement Analog Stick (Left Stick by Default)
; Uses the same syntax as 'Uses_Mouse'
;
; Good abilities to use for this is the DH 'Vault' and the Barb 'Whirlwind'
; Basically anything that moves your character rather than using a targeted spell should go here
; ex. Movement_Actions = 1, 4, t
;
; The above would ignore the targeting reticule's position when firing off the 1, 4 and t keys
Movement_Actions =

[Mouse/Keyboard]

; Whether or not intercept and re-purpose the mouse and keyboard's input
Enabled = false

; For a full list of acceptable key names, check here: https://autohotkey.com/docs/KeyList.htm
Move_Up = w
Move_Down = s
Move_Left = a
Move_Right = d

; Keybinds put here move the mouse to the software mouse's position (Right Stick by Default) before pressing the specified keys
; Do not include modifier keys here as modifiers have no affect on whether or not a key is targeted
; ex. Targeted_Actions = 1, 4, t, z
;
; The above would make any buttons using the hotkeys 1, 4, t and Shift+z (not exclusively z) fire off at the software mouse's position
Targeted_Actions = LButton, RButton, 1, 2, 3, 4

; Keybinds put here will ignore the software mouse's position when using the controller button bound to it
; Instead, it will instead use the specified keys at the direction of the movement keys
; Uses the same syntax as 'Targeted_Actions'
;
; Good abilities to use for this is the DH 'Vault' and the Barb 'Whirlwind'
; Basically anything that moves your character rather than using a targeted spell should go here
; ex. Movement_Actions = 1, 4, t
;
; The above would ignore the software mouse's position when firing off the 1, 4 and t keys
Movement_Actions =

[Other]

; Force_Move should be set to your bound force move key from Diablo III
; It's the key combination that is pressed whenever the left stick is not at rest or the movement keys are pressed
; Modifier keys are allowed here as well
;
; ex. Force_Move = Alt+MButton
Force_Move = Space