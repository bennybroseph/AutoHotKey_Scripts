[Preferences]
; Name of the application you want to use the program for
; This should be the name of the window that opens when the game is running
; It's usually the same as the .exe
; Swaps window focus when launching the program
Application_Name = Diablo III

; The delay in milliseconds between LButton presses at the center of the screen
; Setting this value higher is useful if the game has anti-cheat enabled which disallows repeated button presses
Loot_Delay = 80

; The delay in milliseconds between moving the cursor over to the targeting reticule and pressing the desired hotkey.
; Setting this value to ~10 is useful for games like PoE which seem to register input slower than Diablo III
Targeting_Delay = 5

; The strength of the vibration. Max value of 65535
Vibration_Strength = 55000

; The amount of time in milliseconds that the controller vibrates for
Vibration_Duration = 125

; The amount of time in milliseconds before the key is considered held down
Hold_Delay = 210

; Enables 'Cursor' mode when the program starts
; Useful if you don't want to bind the toggle to a button but want to use the mode anyway
; Keep in mind that there is no keyboard key bound to 'Cursor' mode by default
; If enabled here and not bound to a controller button there will be no way to disable it
Cursor_Mode_At_Start = false

; Enables 'FreeTarget' mode when the program starts
; Useful if you don't want to bind the toggle to a button but want to use the mode anyway
; Keep in mind that there is no keyboard key bound to 'FreeTarget' mode by default
; If enabled here and not bound to a controller button there will be no way to disable it
FreeTarget_Mode_At_Start = false

; Whether or not to show a notification in the top left of the screen when in the respective mode
; true = show notification
; false = hide notification
Show_Cursor_Mode_Notification = true
Show_FreeTarget_Mode_Notification = true
Show_Inventory_Mode_Notification = true

; Whether or not to show the notification in the top left of the screen when the application is paused
; true = show notification
; false = hide notification
Show_Paused_Notification = true

[Analog Stick]
; The base resolution to use when scaling the radius and offset values to different window sizes
; If your resolution does not match this one, the script will attempt to automatically scale it
; If you don't plan on editing the radius and offset values for your resolution, don't edit this
Base_Resolution_Height = 1920
Base_Resolution_Width = 1080

; The minimum value needed to register the stick as in use
; The max value possible for a stick is 32767
; Try setting this higher if your controller 'drifts' a lot
Left_Analog_Deadzone = 4500
Right_Analog_Deadzone = 4500

; The width and height of the oval that the stick responsible for movement (Left Stick by Default)
; makes when pushed all the way in that direction
Movement_Radius_Width = 55
Movement_Radius_Height = 38

; The width and height of the oval that the stick responsible for targeting (Right Stick by Default)
; makes when pushed all the way in that direction
Targeting_Radius_Width = 800
Targeting_Radius_Height = 400

; The value to be added to the dead center of the active window to determine the center of the game
; It's basically determining where the mouse rests at idle and the Loot spam clicks should happen.
; You should try to make this end up where your player's feet are for the game you are playing
Center_Offset_X = 0
Center_Offset_Y = -60

; These values are the extra offset that the left analog stick will use added to 'Center_Offset' to define it's movement circle
; The final value for the left stick's center will be 'Center_Offset' plus this value
Movement_Center_Offset_X = 0
Movement_Center_Offset_Y = 25

; These values are the extra offset that the right analog stick will use added to 'Center_Offset' to define it's movement circle
; The final value for the right stick's center will be 'Center_Offset' plus this value
Targeting_Center_Offset_X = 0
Targeting_Center_Offset_Y = 0

; These values are a multiplier for the sensitivity of each stick's cursor mode
; Values above 1.0 will increase the speed and values below 1.0 will decrease it while in cursor mode for the respective stick
Left_Analog_Cursor_Sensitivity_X = 1
Left_Analog_Cursor_Sensitivity_Y = 1

; These values are a multiplier for the sensitivity of each stick's cursor mode
; Values above 1.0 will increase the speed and values below 1.0 will decrease it while in cursor mode for the respective stick
Right_Analog_Cursor_Sensitivity_X = 1
Right_Analog_Cursor_Sensitivity_Y = 1

; Swaps the left and right stick responsibilities at the start
; The default behaviour is left stick moves and right stick targets
; Setting this to true would make left stick target and right stick move
Swap_Sticks_At_Start = false

[Inventory]
; The script automatically scales based on the width and height difference from a 1920x1080 resolution
; If your resolution is in 16:9 aspect ratio then you don't need to worry about these values
; If using a non 16:9 aspect ratio, these values can be used to scale the inventory grid in addition to the automatic scaling
Custom_Scaling_Width = 1
Custom_Scaling_Height = 1

; Allow holding the D-Pad buttons to move the cursor rather than pressing the assigned keybind
Hold_To_Move = true

; The amount of time in milliseconds between moving the cursor again while holding down the D-Pad in inventory mode
Hold_Delay = 75

[Image Overlay]
; Enables or disables the basic tooltip overlay
; If this setting is off then none of the other settings in this section will function
Enable_Image_Overlay = true

; The base resolution to use when scaling the images to different window sizes
; If your resolution does not match this one, the script will attempt to automatically scale it
; If you don't plan on editing the image overlay values for your resolution, don't edit this
Base_Resolution_Width = 1920
Base_Resolution_Height = 1080

; The scale of each image in the overlay
; Images also scale automatically when the current resolution does not equal the base resolution
Image_Scale = 0.1875

; This should be the keybind that you want to represent here not the controller button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your in-game keybindings should stay static, this setup should be easier to manage
Image1_Keybind = q
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image1_Pos_X = 660
Image1_Pos_Y = 1070
; The background color to give the image. Use 0x00000000 to leave it transparent
Image1_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image2_Keybind = w
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image2_Pos_X = 727
Image2_Pos_Y = 1070
; The background color to give the image. Use 0x00000000 to leave it transparent
Image2_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image3_Keybind = e
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image3_Pos_X = 793
Image3_Pos_Y = 1070
; The background color to give the image. Use 0x00000000 to leave it transparent
Image3_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image4_Keybind = r
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image4_Pos_X = 860
Image4_Pos_Y = 1070
; The background color to give the image. Use 0x00000000 to leave it transparent
Image4_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image5_Keybind = Shift+LButton
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image5_Pos_X = 928
Image5_Pos_Y = 1069
; The background color to give the image. Use 0x00000000 to leave it transparent
Image5_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image6_Keybind = RButton
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image6_Pos_X = 995
Image6_Pos_Y = 1069
; The background color to give the image. Use 0x00000000 to leave it transparent
Image6_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image7_Keybind = a
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image7_Pos_X = 1063
Image7_Pos_Y = 1067
; The background color to give the image. Use 0x00000000 to leave it transparent
Image7_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image8_Keybind = x
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image8_Pos_X = 1117
Image8_Pos_Y = 1067
; The background color to give the image. Use 0x00000000 to leave it transparent
Image8_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image9_Keybind = Tab+Inventory
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image9_Pos_X = 1183
Image9_Pos_Y = 1067
; The background color to give the image. Use 0x00000000 to leave it transparent
Image9_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image10_Keybind = Esc
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image10_Pos_X = 1265
Image10_Pos_Y = 1067
; The background color to give the image. Use 0x00000000 to leave it transparent
Image10_Background = 0xff000000

; This should be the keybind that you want to represent here not the button
; That way if you change the button mappings in this program around you don't need to remember to change this later
; Since your game keybindings should stay static, this setup should be easier to manage
Image11_Keybind = Numpad4+CursorMode
; The position of the tooltip based on a 1920x1080 resolution window
; The tooltip is centered based on its size and will auto scale to other 16:9 resolutions
Image11_Pos_X = 1725
Image11_Pos_Y = 380
; The background color to give the image. Use 0x00000000 to leave it transparent
Image11_Background = 0xff000000